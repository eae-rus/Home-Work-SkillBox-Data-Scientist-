Домашнее задание к уроку 17.3:
1. Написать запрос для выбора студентов в порядке их регистрации на сервисе.

SELECT * FROM Students ORDER BY registration_date;

2. Написать запрос для выбора 5 самых дорогих курсов, на которых более 4 студентов, и которые длятся более 10 часов.


SELECT * FROM Courses WHERE students_count > 4 AND duration > 10 ORDER BY price DESC LIMIT 5;


3. Написать один (!) запрос, который выведет одновременно список из имен трёх самых молодых студентов, имен трёх самых старых учителей и названий трёх самых продолжительных курсов.


(SELECT name FROM Students ORDER BY age LIMIT 3)
UNION ALL
(SELECT name FROM Teachers ORDER BY age DESC LIMIT 3) 
UNION ALL 
(SELECT name FROM Courses ORDER BY duration DESC LIMIT 3);  

--------------------------------------------------------------------------------------------------------------------------------------------
Домашнее задание к уроку 17.4:
1. Написать запрос для выбора среднего возраста всех учителей с зарплатой более 10 000.


SELECT AVG(age) AS average_age FROM Teachers WHERE salary > 10000;


2. Написать запрос для расчета суммы, сколько будет стоить купить все курсы по дизайну.


SELECT SUM(price) AS sum_price_for_design FROM Courses WHERE type = 'DESIGN';


3. Написать запрос для расчёта, сколько минут (!) длятся все курсы по программированию.


SELECT SUM(duration) * 60 AS sum_duration_in_minute FROM Courses WHERE type = 'PROGRAMMING';

--------------------------------------------------------------------------------------------------------------------------------------------
Домашнее задание к уроку 17.5:
В этому уроке нет ДЗ.


--------------------------------------------------------------------------------------------------------------------------------------------
Домашнее задание к уроку 17.6:
1. Напишите запрос, который выводит сумму, сколько часов должен в итоге проучиться каждый студент (сумма длительности всех курсов на которые он подписан). В результате запрос возвращает две колонки: Имя Студента — Кол-во часов.


SELECT Students.name as students_name, SUM(duration) AS sum_duration FROM Students
JOIN Subscriptions ON Subscriptions.student_id = Students.id
JOIN Courses ON Courses.id = Subscriptions.course_id 
GROUP BY Students.name LIMIT 5;


2. Напишите запрос, который посчитает для каждого учителя средний возраст его учеников.
В результате запрос возвращает две колонки: Имя Учителя — Средний Возраст Учеников.


SELECT Teachers.name as teachers_name, AVG(Students.age) AS avg_students_age FROM Teachers
JOIN Courses ON Courses.teacher_id = Teachers.id
JOIN Subscriptions ON Subscriptions.course_id = Courses.id 
JOIN Students ON Students.id = Subscriptions.student_id
GROUP BY Teachers.name LIMIT 5;


3. Напишите запрос, который выводит среднюю зарплату учителей для каждого типа курса (Дизайн/Программирование/Маркетинг и т.д.) В результате запрос возвращает две колонки: Тип Курса – Средняя зарплата.


SELECT Courses.type as courses_type, AVG(Teachers.salary) AS avg_salary FROM Courses
JOIN Teachers ON Teachers.id = Courses.teacher_id
GROUP BY Courses.type;


SQL_homework.txt
SQL_homework.txt. На экране.